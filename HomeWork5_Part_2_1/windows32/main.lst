Microsoft (R) Macro Assembler Version 11.00.61030.0	    02/28/16 19:52:35
main.asm						     Page 1 - 1


				; FileName : main.asm
				; Author : Norris, Joel R
				; Date : 2016_02_08
				; Project : HomeWork 5, Part 1
				; ToDo : rewrite data to use smaller sizes ( 

				; Assembler directives
				.586				; accept instructions for 586
				.MODEL FLAT			; generate code for flat memory
				INCLUDE io.h		; header file for input / output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 
				.STACK 4096			; reserve 4096-byte stack

 00000000			.DATA				; DATA section begins : reserve storage for data

 00000000  00000014 [		asciiIn		DWORD	20 DUP (?)
	    00000000
	   ]
 00000050 45 6E 74 65 72	prompt		BYTE	"Enter a character", 00h
	   20 61 20 63 68
	   61 72 61 63 74
	   65 72 00

 00000062 52 65 73 75 6C	msgLabel	BYTE	"Result", 00h
	   74 00
 00000069 55 70 70 65 72	msgText		BYTE	"Upper count: "
	   20 63 6F 75 6E
	   74 3A 20
 00000076  0000000B [		asciiUpper	BYTE	11 DUP (?), 0dh, 0ah 
	    00
	   ] 0D 0A
 00000083  4C 6F 77 65 72				BYTE	"Lower count: "
	   20 63 6F 75 6E
	   74 3A 20
 00000090  0000000B [		asciiLower	BYTE	11 DUP (?), 0dh, 0ah
	    00
	   ] 0D 0A
 0000009D  4F 74 68 65 72				BYTE	"Other count: "
	   20 63 6F 75 6E
	   74 3A 20
 000000AA  0000000B [		asciiOther	BYTE	11 DUP (?), 00h
	    00
	   ] 00

 000000B6 00000000		lowerCount	DWORD	0
 000000BA 00000000		upperCount	DWORD	0
 000000BE 00000000		otherCount	DWORD	0
 000000C2 00000000		count		DWORD	0

 000000C6 00000000		asciiHex	DWORD	0
 000000CA 00000061		lowera		DWORD	061h
 000000CE 0000007A		lowerz		DWORD	07Ah				
 000000D2 00000041		upperA		DWORD	041h
 000000D6 0000005A		upperZ		DWORD	05Ah
							
 00000000			.CODE				; Code section begins

 00000000			_MainProc			PROC

 00000000  B9 00000000					mov		ecx, 0
 00000005  B8 00000000					mov		eax, 0

 0000000A  83 F9 0A		beginLoop:	cmp		ecx, 10					; while count < 10
 0000000D  7D 5F					jge		done	

							; read in character
							input	prompt, asciiIn, 20
 0000002D  A1 00000000 R				mov		eax, asciiIn
							
							; compare ranges, A ~ Z, a ~ z
							; start at the low end, in hex, A, and work our way up through z 
							; pass a memory address of which counter to increment 
							; jump accordingly

 00000032  3B 05 000000D2 R				cmp eax, upperA			; i < A
 00000038  BB 000000BE R				mov ebx, OFFSET [otherCount]	
 0000003D  7C 27					jl doCount

 0000003F  3B 05 000000D6 R				cmp eax, upperZ			; i <= Z
 00000045  BB 000000BA R				mov ebx, OFFSET [upperCount]
 0000004A  7E 1A					jle doCount

 0000004C  3B 05 000000CA R				cmp eax, lowera			; i > a
 00000052  BB 000000BE R				mov ebx, OFFSET [otherCount]
 00000057  7C 0D					jl doCount

 00000059  3B 05 000000CE R				cmp eax, lowerz			; i <= z
 0000005F  BB 000000B6 R				mov ebx, OFFSET [lowerCount]
 00000064  7E 00					jle doCount

 00000066			doCount:
							; increment the correct counter, based on memory address
 00000066  8B 13					mov edx, [ebx]
 00000068  42						inc edx
 00000069  89 13					mov [ebx], edx

 0000006B  41						inc ecx			; counter ++
 0000006C  EB 9C					jmp	beginLoop	; manual loops r fun.	

 0000006E			done:		
							; output results
							dtoa	asciiUpper, upperCount
							dtoa	asciiLower, lowerCount
							dtoa	asciiOther, otherCount

							output	msgLabel, msgText
 000000DB  B8 00000000					mov		eax, 0;
 000000E0  C3						ret

 000000E1			_MainProc			ENDP						; end of main procedure
									
									END							; end of source code
Microsoft (R) Macro Assembler Version 11.00.61030.0	    02/28/16 19:52:35
main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000DA Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000E1 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000E1 Public
  beginLoop  . . . . . . . . . .	L Near	 0000000A _TEXT	
  doCount  . . . . . . . . . . .	L Near	 00000066 _TEXT	
  done . . . . . . . . . . . . .	L Near	 0000006E _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
asciiHex . . . . . . . . . . . .	DWord	 000000C6 _DATA	
asciiIn  . . . . . . . . . . . .	DWord	 00000000 _DATA	
asciiLower . . . . . . . . . . .	Byte	 00000090 _DATA	
asciiOther . . . . . . . . . . .	Byte	 000000AA _DATA	
asciiUpper . . . . . . . . . . .	Byte	 00000076 _DATA	
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
count  . . . . . . . . . . . . .	DWord	 000000C2 _DATA	
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
lowerCount . . . . . . . . . . .	DWord	 000000B6 _DATA	
lowera . . . . . . . . . . . . .	DWord	 000000CA _DATA	
lowerz . . . . . . . . . . . . .	DWord	 000000CE _DATA	
msgLabel . . . . . . . . . . . .	Byte	 00000062 _DATA	
msgText  . . . . . . . . . . . .	Byte	 00000069 _DATA	
otherCount . . . . . . . . . . .	DWord	 000000BE _DATA	
prompt . . . . . . . . . . . . .	Byte	 00000050 _DATA	
upperA . . . . . . . . . . . . .	DWord	 000000D2 _DATA	
upperCount . . . . . . . . . . .	DWord	 000000BA _DATA	
upperZ . . . . . . . . . . . . .	DWord	 000000D6 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors

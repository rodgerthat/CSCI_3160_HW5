Microsoft (R) Macro Assembler Version 11.00.61030.0	    02/18/16 16:21:55
main.asm						     Page 1 - 1


				; FileName : main.asm
				; Author : Norris, Joel R
				; Date : 2016_02_08
				; Project : HomeWork 5

				; Assembler directives
				.586				; accept instructions for 586
				.MODEL FLAT			; generate code for flat memory
				INCLUDE io.h		; header file for input / output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 
				.STACK 4096			; reserve 4096-byte stack

 00000000			.DATA				; DATA section begins : reserve storage for data
									; results are obtained with debugging
 00000000 FF9C								value		WORD	0FF9Ch
 00000002 0064								ax_value	WORD	00064h

 00000000			.CODE				; Code section begins

 00000000			_MainProc			PROC

									; initialize registers
 00000000  B8 00000000							mov eax, 0;
 00000005  BB 00000000							mov ebx, 0;
 0000000A  B9 00000000							mov ecx, 0;
 0000000F  BA 00000000							mov edx, 0;

									; PART I

									; a.
									;call _loadAX
									;cmp		value, ax
									;jl		next

									; b.
 00000014  E8 00000065							call _loadAX
 00000019  66| 3B 05							cmp		ax, value
	   00000000 R
 00000020  77 56							jnbe	next

									; c. 
 00000022  E8 00000057							call _loadAX
 00000027  66| 83 3D							cmp		value, -100
	   00000000 R 9C
 0000002F  75 47							jne		next

									; d.
 00000031  E8 00000048							call _loadAX
 00000036  66| 83 F8 64							cmp		ax, 100
 0000003A  7F 3C							jg		next

									; e.
 0000003C  E8 0000003D							call _loadAX
 00000041  66| 83 05							add		value, 100		
	   00000000 R 64
 00000049  74 2D							jz		next

									; f.
 0000004B  E8 0000002E							call _loadAX
 00000050  66| 83 05							add		value, 100
	   00000000 R 64
 00000058  71 1E							jno		next

									; g.
 0000005A  E8 0000001F							call _loadAX
 0000005F  66| 83 05							add		value, 100
	   00000000 R 64
 00000067  72 0F							jc		next
									
									; h.
 00000069  E8 00000010							call _loadAX
 0000006E  66| 83 05							add		value, 100
	   00000000 R 64
 00000076  78 00							js		next
									
 00000078			next:				


									; program end				
 00000078  B8 00000000							mov		eax, 0;				; exit w/ return code 0
 0000007D  C3								ret
 0000007E			_MainProc			ENDP						; end of main procedure
									

									; load the AX register w/ the value for each example
 0000007E			_loadAX				PROC
 0000007E  B8 00000000							mov		eax, 0
 00000083  66| A1							mov		ax, ax_value
	   00000002 R
 00000089  C3								ret
 0000008A			_loadAX				ENDP


									END							; end of source code
Microsoft (R) Macro Assembler Version 11.00.61030.0	    02/18/16 16:21:55
main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000004 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000008A Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000007E Public
  next . . . . . . . . . . . . .	L Near	 00000078 _TEXT	
_loadAX  . . . . . . . . . . . .	P Near	 0000007E _TEXT	Length= 0000000C Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
ax_value . . . . . . . . . . . .	Word	 00000002 _DATA	
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
value  . . . . . . . . . . . . .	Word	 00000000 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
